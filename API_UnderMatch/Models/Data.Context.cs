//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API_UnderMatch.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDUnderMatchEntities1 : DbContext
    {
        public BDUnderMatchEntities1()
            : base("name=BDUnderMatchEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ctgCategorias> ctgCategorias { get; set; }
        public virtual DbSet<ctgTipoArbitros> ctgTipoArbitros { get; set; }
        public virtual DbSet<ctgTipoEmpleados> ctgTipoEmpleados { get; set; }
        public virtual DbSet<ctgTipoProveedores> ctgTipoProveedores { get; set; }
        public virtual DbSet<Jugadores_Equipos> Jugadores_Equipos { get; set; }
        public virtual DbSet<tblArbitros> tblArbitros { get; set; }
        public virtual DbSet<tblCanchas> tblCanchas { get; set; }
        public virtual DbSet<tblEquipos> tblEquipos { get; set; }
        public virtual DbSet<tblJugadores> tblJugadores { get; set; }
        public virtual DbSet<tblPartidos> tblPartidos { get; set; }
        public virtual DbSet<tblPersonas> tblPersonas { get; set; }
        public virtual DbSet<tblPlanteles> tblPlanteles { get; set; }
        public virtual DbSet<tblProveedores> tblProveedores { get; set; }
        public virtual DbSet<tblTemporadas> tblTemporadas { get; set; }
        public virtual DbSet<viewJugadores> viewJugadores { get; set; }
        public virtual DbSet<tblEmpleados> tblEmpleados { get; set; }
        public virtual DbSet<Empleados_Planteles> Empleados_Planteles { get; set; }
        public virtual DbSet<viewArbitros> viewArbitros { get; set; }
        public virtual DbSet<viewEmpleados> viewEmpleados { get; set; }
        public virtual DbSet<viewProveedores> viewProveedores { get; set; }
    
        public virtual int tblJugadoresAgregar(string nombre, string primerApellido, string segundoApellido, string fechaNacimiento, string sexo, string telefono, string telefono2, string correo, string numDorsal, string sobreNombre, string posicion, Nullable<int> capitan)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var numDorsalParameter = numDorsal != null ?
                new ObjectParameter("NumDorsal", numDorsal) :
                new ObjectParameter("NumDorsal", typeof(string));
    
            var sobreNombreParameter = sobreNombre != null ?
                new ObjectParameter("SobreNombre", sobreNombre) :
                new ObjectParameter("SobreNombre", typeof(string));
    
            var posicionParameter = posicion != null ?
                new ObjectParameter("Posicion", posicion) :
                new ObjectParameter("Posicion", typeof(string));
    
            var capitanParameter = capitan.HasValue ?
                new ObjectParameter("Capitan", capitan) :
                new ObjectParameter("Capitan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblJugadoresAgregar", nombreParameter, primerApellidoParameter, segundoApellidoParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, telefono2Parameter, correoParameter, numDorsalParameter, sobreNombreParameter, posicionParameter, capitanParameter);
        }
    
        public virtual int tblJugadoresEliminar(Nullable<int> idJugador)
        {
            var idJugadorParameter = idJugador.HasValue ?
                new ObjectParameter("IdJugador", idJugador) :
                new ObjectParameter("IdJugador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblJugadoresEliminar", idJugadorParameter);
        }
    
        public virtual int tblJugadoresModificar(Nullable<int> idPersona, string nombre, string primerApellido, string segundoApellido, string fechaNacimiento, string sexo, string telefono, string telefono2, string correo, Nullable<int> idJugador, string numDorsal, string sobreNombre, string posicion, Nullable<int> capitan)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var idJugadorParameter = idJugador.HasValue ?
                new ObjectParameter("IdJugador", idJugador) :
                new ObjectParameter("IdJugador", typeof(int));
    
            var numDorsalParameter = numDorsal != null ?
                new ObjectParameter("NumDorsal", numDorsal) :
                new ObjectParameter("NumDorsal", typeof(string));
    
            var sobreNombreParameter = sobreNombre != null ?
                new ObjectParameter("SobreNombre", sobreNombre) :
                new ObjectParameter("SobreNombre", typeof(string));
    
            var posicionParameter = posicion != null ?
                new ObjectParameter("Posicion", posicion) :
                new ObjectParameter("Posicion", typeof(string));
    
            var capitanParameter = capitan.HasValue ?
                new ObjectParameter("Capitan", capitan) :
                new ObjectParameter("Capitan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblJugadoresModificar", idPersonaParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, telefono2Parameter, correoParameter, idJugadorParameter, numDorsalParameter, sobreNombreParameter, posicionParameter, capitanParameter);
        }
    
        public virtual int tblEquiposActivar(Nullable<int> iD_EQUIPO)
        {
            var iD_EQUIPOParameter = iD_EQUIPO.HasValue ?
                new ObjectParameter("ID_EQUIPO", iD_EQUIPO) :
                new ObjectParameter("ID_EQUIPO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblEquiposActivar", iD_EQUIPOParameter);
        }
    
        public virtual int tblEquiposEliminar(Nullable<int> iD_EQUIPO)
        {
            var iD_EQUIPOParameter = iD_EQUIPO.HasValue ?
                new ObjectParameter("ID_EQUIPO", iD_EQUIPO) :
                new ObjectParameter("ID_EQUIPO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblEquiposEliminar", iD_EQUIPOParameter);
        }
    
        public virtual int tblJugadoresActivar(Nullable<int> idJugador)
        {
            var idJugadorParameter = idJugador.HasValue ?
                new ObjectParameter("IdJugador", idJugador) :
                new ObjectParameter("IdJugador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblJugadoresActivar", idJugadorParameter);
        }
    
        public virtual int ctgTipoProveedoresActivar(Nullable<int> idTipoProveedor)
        {
            var idTipoProveedorParameter = idTipoProveedor.HasValue ?
                new ObjectParameter("IdTipoProveedor", idTipoProveedor) :
                new ObjectParameter("IdTipoProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgTipoProveedoresActivar", idTipoProveedorParameter);
        }
    
        public virtual int ctgTipoProveedoresAgregar(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgTipoProveedoresAgregar", nombreParameter);
        }
    
        public virtual int ctgTipoProveedoresEliminar(Nullable<int> idTipoProveedor)
        {
            var idTipoProveedorParameter = idTipoProveedor.HasValue ?
                new ObjectParameter("IdTipoProveedor", idTipoProveedor) :
                new ObjectParameter("IdTipoProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgTipoProveedoresEliminar", idTipoProveedorParameter);
        }
    
        public virtual int ctgTipoProveedoresModificar(Nullable<int> idTipoProveedor, string nombre)
        {
            var idTipoProveedorParameter = idTipoProveedor.HasValue ?
                new ObjectParameter("IdTipoProveedor", idTipoProveedor) :
                new ObjectParameter("IdTipoProveedor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgTipoProveedoresModificar", idTipoProveedorParameter, nombreParameter);
        }
    
        public virtual int tblProveedoresActivar(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblProveedoresActivar", idProveedorParameter);
        }
    
        public virtual int tblProveedoresAgregar(string rfc, string nombre, string razonSocial, string calle, string numero, string colonia, string codigoPostal, string ciudad, string estado, Nullable<int> idTipoProveedor, string correo, string telefono, Nullable<int> idPlantel)
        {
            var rfcParameter = rfc != null ?
                new ObjectParameter("Rfc", rfc) :
                new ObjectParameter("Rfc", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var coloniaParameter = colonia != null ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var idTipoProveedorParameter = idTipoProveedor.HasValue ?
                new ObjectParameter("IdTipoProveedor", idTipoProveedor) :
                new ObjectParameter("IdTipoProveedor", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var idPlantelParameter = idPlantel.HasValue ?
                new ObjectParameter("IdPlantel", idPlantel) :
                new ObjectParameter("IdPlantel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblProveedoresAgregar", rfcParameter, nombreParameter, razonSocialParameter, calleParameter, numeroParameter, coloniaParameter, codigoPostalParameter, ciudadParameter, estadoParameter, idTipoProveedorParameter, correoParameter, telefonoParameter, idPlantelParameter);
        }
    
        public virtual int tblProveedoresEliminar(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblProveedoresEliminar", idProveedorParameter);
        }
    
        public virtual int tblProveedoresModificar(Nullable<int> idProveedor, string rfc, string nombre, string razonSocial, string calle, string numero, string colonia, string codigoPostal, string ciudad, string estado, Nullable<int> idTipoProveedor, string correo, string telefono, Nullable<int> idPlantel)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var rfcParameter = rfc != null ?
                new ObjectParameter("Rfc", rfc) :
                new ObjectParameter("Rfc", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var coloniaParameter = colonia != null ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var idTipoProveedorParameter = idTipoProveedor.HasValue ?
                new ObjectParameter("IdTipoProveedor", idTipoProveedor) :
                new ObjectParameter("IdTipoProveedor", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var idPlantelParameter = idPlantel.HasValue ?
                new ObjectParameter("IdPlantel", idPlantel) :
                new ObjectParameter("IdPlantel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblProveedoresModificar", idProveedorParameter, rfcParameter, nombreParameter, razonSocialParameter, calleParameter, numeroParameter, coloniaParameter, codigoPostalParameter, ciudadParameter, estadoParameter, idTipoProveedorParameter, correoParameter, telefonoParameter, idPlantelParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int tblArbitrosActivar(Nullable<int> idArbitro)
        {
            var idArbitroParameter = idArbitro.HasValue ?
                new ObjectParameter("IdArbitro", idArbitro) :
                new ObjectParameter("IdArbitro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblArbitrosActivar", idArbitroParameter);
        }
    
        public virtual int tblArbitrosAgregar(string nombre, string primerApellido, string segundoApellido, string fechaNacimiento, string sexo, string telefono, string telefono2, string correo, Nullable<decimal> costoArbitraje, Nullable<int> categoria, Nullable<int> tipoArbitro)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var costoArbitrajeParameter = costoArbitraje.HasValue ?
                new ObjectParameter("CostoArbitraje", costoArbitraje) :
                new ObjectParameter("CostoArbitraje", typeof(decimal));
    
            var categoriaParameter = categoria.HasValue ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(int));
    
            var tipoArbitroParameter = tipoArbitro.HasValue ?
                new ObjectParameter("TipoArbitro", tipoArbitro) :
                new ObjectParameter("TipoArbitro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblArbitrosAgregar", nombreParameter, primerApellidoParameter, segundoApellidoParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, telefono2Parameter, correoParameter, costoArbitrajeParameter, categoriaParameter, tipoArbitroParameter);
        }
    
        public virtual int tblArbitrosEliminar(Nullable<int> idArbitro, Nullable<int> eliminar)
        {
            var idArbitroParameter = idArbitro.HasValue ?
                new ObjectParameter("IdArbitro", idArbitro) :
                new ObjectParameter("IdArbitro", typeof(int));
    
            var eliminarParameter = eliminar.HasValue ?
                new ObjectParameter("Eliminar", eliminar) :
                new ObjectParameter("Eliminar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblArbitrosEliminar", idArbitroParameter, eliminarParameter);
        }
    
        public virtual int tblArbitrosModificar(Nullable<int> idPersona, string nombre, string primerApellido, string segundoApellido, string fechaNacimiento, string sexo, string telefono, string telefono2, string correo, Nullable<int> idArbitro, Nullable<decimal> costoArbitraje, Nullable<int> categoria, Nullable<int> tipoArbitro)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var idArbitroParameter = idArbitro.HasValue ?
                new ObjectParameter("IdArbitro", idArbitro) :
                new ObjectParameter("IdArbitro", typeof(int));
    
            var costoArbitrajeParameter = costoArbitraje.HasValue ?
                new ObjectParameter("CostoArbitraje", costoArbitraje) :
                new ObjectParameter("CostoArbitraje", typeof(decimal));
    
            var categoriaParameter = categoria.HasValue ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(int));
    
            var tipoArbitroParameter = tipoArbitro.HasValue ?
                new ObjectParameter("TipoArbitro", tipoArbitro) :
                new ObjectParameter("TipoArbitro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblArbitrosModificar", idPersonaParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, telefono2Parameter, correoParameter, idArbitroParameter, costoArbitrajeParameter, categoriaParameter, tipoArbitroParameter);
        }
    
        public virtual int tblEmpleadosActivar(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblEmpleadosActivar", idEmpleadoParameter);
        }
    
        public virtual int tblEmpleadosAgregar(string nombre, string primerApellido, string segundoApellido, string fechaNacimiento, string sexo, string telefono, string telefono2, string correo, string calleE, string numeroE, string coloniaE, string codigoPostalE, string ciudadE, string estadoE, string curpe, Nullable<int> tipoEmpleado, string rfcE, string nssE, Nullable<decimal> salarioE, string horarioE)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var calleEParameter = calleE != null ?
                new ObjectParameter("CalleE", calleE) :
                new ObjectParameter("CalleE", typeof(string));
    
            var numeroEParameter = numeroE != null ?
                new ObjectParameter("NumeroE", numeroE) :
                new ObjectParameter("NumeroE", typeof(string));
    
            var coloniaEParameter = coloniaE != null ?
                new ObjectParameter("ColoniaE", coloniaE) :
                new ObjectParameter("ColoniaE", typeof(string));
    
            var codigoPostalEParameter = codigoPostalE != null ?
                new ObjectParameter("CodigoPostalE", codigoPostalE) :
                new ObjectParameter("CodigoPostalE", typeof(string));
    
            var ciudadEParameter = ciudadE != null ?
                new ObjectParameter("CiudadE", ciudadE) :
                new ObjectParameter("CiudadE", typeof(string));
    
            var estadoEParameter = estadoE != null ?
                new ObjectParameter("EstadoE", estadoE) :
                new ObjectParameter("EstadoE", typeof(string));
    
            var curpeParameter = curpe != null ?
                new ObjectParameter("Curpe", curpe) :
                new ObjectParameter("Curpe", typeof(string));
    
            var tipoEmpleadoParameter = tipoEmpleado.HasValue ?
                new ObjectParameter("TipoEmpleado", tipoEmpleado) :
                new ObjectParameter("TipoEmpleado", typeof(int));
    
            var rfcEParameter = rfcE != null ?
                new ObjectParameter("RfcE", rfcE) :
                new ObjectParameter("RfcE", typeof(string));
    
            var nssEParameter = nssE != null ?
                new ObjectParameter("NssE", nssE) :
                new ObjectParameter("NssE", typeof(string));
    
            var salarioEParameter = salarioE.HasValue ?
                new ObjectParameter("SalarioE", salarioE) :
                new ObjectParameter("SalarioE", typeof(decimal));
    
            var horarioEParameter = horarioE != null ?
                new ObjectParameter("HorarioE", horarioE) :
                new ObjectParameter("HorarioE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblEmpleadosAgregar", nombreParameter, primerApellidoParameter, segundoApellidoParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, telefono2Parameter, correoParameter, calleEParameter, numeroEParameter, coloniaEParameter, codigoPostalEParameter, ciudadEParameter, estadoEParameter, curpeParameter, tipoEmpleadoParameter, rfcEParameter, nssEParameter, salarioEParameter, horarioEParameter);
        }
    
        public virtual int tblEmpleadosEliminar(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblEmpleadosEliminar", idEmpleadoParameter);
        }
    
        public virtual int tblEmpleadosModificar(Nullable<int> idPersona, string nombre, string primerApellido, string segundoApellido, string fechaNacimiento, string sexo, string telefono, string telefono2, string correo, Nullable<int> idEmpleado, string calleE, string numeroE, string coloniaE, string codigoPostalE, string ciudadE, string estadoE, string curpe, Nullable<int> tipoEmpleado, string rfcE, string nssE, Nullable<decimal> salarioE, string horarioE)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var calleEParameter = calleE != null ?
                new ObjectParameter("CalleE", calleE) :
                new ObjectParameter("CalleE", typeof(string));
    
            var numeroEParameter = numeroE != null ?
                new ObjectParameter("NumeroE", numeroE) :
                new ObjectParameter("NumeroE", typeof(string));
    
            var coloniaEParameter = coloniaE != null ?
                new ObjectParameter("ColoniaE", coloniaE) :
                new ObjectParameter("ColoniaE", typeof(string));
    
            var codigoPostalEParameter = codigoPostalE != null ?
                new ObjectParameter("CodigoPostalE", codigoPostalE) :
                new ObjectParameter("CodigoPostalE", typeof(string));
    
            var ciudadEParameter = ciudadE != null ?
                new ObjectParameter("CiudadE", ciudadE) :
                new ObjectParameter("CiudadE", typeof(string));
    
            var estadoEParameter = estadoE != null ?
                new ObjectParameter("EstadoE", estadoE) :
                new ObjectParameter("EstadoE", typeof(string));
    
            var curpeParameter = curpe != null ?
                new ObjectParameter("Curpe", curpe) :
                new ObjectParameter("Curpe", typeof(string));
    
            var tipoEmpleadoParameter = tipoEmpleado.HasValue ?
                new ObjectParameter("TipoEmpleado", tipoEmpleado) :
                new ObjectParameter("TipoEmpleado", typeof(int));
    
            var rfcEParameter = rfcE != null ?
                new ObjectParameter("RfcE", rfcE) :
                new ObjectParameter("RfcE", typeof(string));
    
            var nssEParameter = nssE != null ?
                new ObjectParameter("NssE", nssE) :
                new ObjectParameter("NssE", typeof(string));
    
            var salarioEParameter = salarioE.HasValue ?
                new ObjectParameter("SalarioE", salarioE) :
                new ObjectParameter("SalarioE", typeof(decimal));
    
            var horarioEParameter = horarioE != null ?
                new ObjectParameter("HorarioE", horarioE) :
                new ObjectParameter("HorarioE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblEmpleadosModificar", idPersonaParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, telefono2Parameter, correoParameter, idEmpleadoParameter, calleEParameter, numeroEParameter, coloniaEParameter, codigoPostalEParameter, ciudadEParameter, estadoEParameter, curpeParameter, tipoEmpleadoParameter, rfcEParameter, nssEParameter, salarioEParameter, horarioEParameter);
        }
    
        public virtual int ctgCategoriasActivar(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgCategoriasActivar", idCategoriaParameter);
        }
    
        public virtual int ctgCategoriasEliminar(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgCategoriasEliminar", idCategoriaParameter);
        }
    
        public virtual int ctgTipoArbitroActivar(Nullable<int> idTipoArbitro)
        {
            var idTipoArbitroParameter = idTipoArbitro.HasValue ?
                new ObjectParameter("IdTipoArbitro", idTipoArbitro) :
                new ObjectParameter("IdTipoArbitro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgTipoArbitroActivar", idTipoArbitroParameter);
        }
    
        public virtual int ctgTipoArbitroEliminar(Nullable<int> idTipoArbitro)
        {
            var idTipoArbitroParameter = idTipoArbitro.HasValue ?
                new ObjectParameter("IdTipoArbitro", idTipoArbitro) :
                new ObjectParameter("IdTipoArbitro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgTipoArbitroEliminar", idTipoArbitroParameter);
        }
    
        public virtual int ctgTipoEmpleadoActivar(Nullable<int> idTipoEmpleado)
        {
            var idTipoEmpleadoParameter = idTipoEmpleado.HasValue ?
                new ObjectParameter("IdTipoEmpleado", idTipoEmpleado) :
                new ObjectParameter("IdTipoEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgTipoEmpleadoActivar", idTipoEmpleadoParameter);
        }
    
        public virtual int ctgTipoEmpleadoEliminar(Nullable<int> idTipoEmpleado)
        {
            var idTipoEmpleadoParameter = idTipoEmpleado.HasValue ?
                new ObjectParameter("IdTipoEmpleado", idTipoEmpleado) :
                new ObjectParameter("IdTipoEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ctgTipoEmpleadoEliminar", idTipoEmpleadoParameter);
        }
    
        public virtual int tblCanchaActivar(Nullable<int> idCancha)
        {
            var idCanchaParameter = idCancha.HasValue ?
                new ObjectParameter("IdCancha", idCancha) :
                new ObjectParameter("IdCancha", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblCanchaActivar", idCanchaParameter);
        }
    
        public virtual int tblCanchaEliminar(Nullable<int> idCancha)
        {
            var idCanchaParameter = idCancha.HasValue ?
                new ObjectParameter("IdCancha", idCancha) :
                new ObjectParameter("IdCancha", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblCanchaEliminar", idCanchaParameter);
        }
    
        public virtual int tblPartidoEliminar(Nullable<int> idPartido)
        {
            var idPartidoParameter = idPartido.HasValue ?
                new ObjectParameter("IdPartido", idPartido) :
                new ObjectParameter("IdPartido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblPartidoEliminar", idPartidoParameter);
        }
    
        public virtual int tblPlantelActivar(Nullable<int> idPlantel)
        {
            var idPlantelParameter = idPlantel.HasValue ?
                new ObjectParameter("IdPlantel", idPlantel) :
                new ObjectParameter("IdPlantel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblPlantelActivar", idPlantelParameter);
        }
    
        public virtual int tblPlantelEliminar(Nullable<int> idPlantel)
        {
            var idPlantelParameter = idPlantel.HasValue ?
                new ObjectParameter("IdPlantel", idPlantel) :
                new ObjectParameter("IdPlantel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblPlantelEliminar", idPlantelParameter);
        }
    
        public virtual int tblTemporadaActivar(Nullable<int> idTemporada)
        {
            var idTemporadaParameter = idTemporada.HasValue ?
                new ObjectParameter("IdTemporada", idTemporada) :
                new ObjectParameter("IdTemporada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblTemporadaActivar", idTemporadaParameter);
        }
    
        public virtual int tblTemporadaEliminar(Nullable<int> idTemporada)
        {
            var idTemporadaParameter = idTemporada.HasValue ?
                new ObjectParameter("IdTemporada", idTemporada) :
                new ObjectParameter("IdTemporada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblTemporadaEliminar", idTemporadaParameter);
        }
    
        public virtual int tblPartidoActivar(Nullable<int> idPartido)
        {
            var idPartidoParameter = idPartido.HasValue ?
                new ObjectParameter("IdPartido", idPartido) :
                new ObjectParameter("IdPartido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tblPartidoActivar", idPartidoParameter);
        }
    }
}
